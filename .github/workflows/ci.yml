name: CI/CD Pipeline Chicha Store

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Lint Backend
      working-directory: ./backend
      run: npm run lint
    
    - name: Lint Frontend
      working-directory: ./frontend
      run: npm run lint
    
    - name: Backend Tests
      working-directory: ./backend
      run: npm test
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
    
    - name: Frontend Tests
      working-directory: ./frontend
      run: npm test

  build-and-deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    
    - name: Build Backend
      working-directory: ./backend
      run: npm run build
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      env:
        HOST: ${{ secrets.SERVER_HOST }}
        USERNAME: ${{ secrets.SERVER_USER }}
        SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
      with:
        host: "${{ env.HOST }}"
        username: "${{ env.USERNAME }}"
        key: "${{ env.SSH_KEY }}"
        script: |
          cd /path/to/chicha-store
          git pull origin main
          npm ci
          npm run migrate
          pm2 restart chicha-store-backend
          pm2 restart chicha-store-frontend

  notify:
    needs: [build-and-deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        webhook_url: "${{ secrets.SLACK_WEBHOOK }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
