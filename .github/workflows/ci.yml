name: CI/CD Pipeline Chicha Store

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint Backend
      working-directory: ./backend
      run: npm run lint

    - name: Lint Frontend
      working-directory: ./frontend
      run: npm run lint

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Build Backend
      working-directory: ./backend
      run: npm run build

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Render
      env:
        RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
      run: |
        curl -X POST $RENDER_DEPLOY_HOOK

  status-notification:
    needs: [lint-and-test, build, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: GitHub Status Notification
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const workflowRun = await github.rest.actions.getWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.name,
            run_id: context.runId
          });

          const status = workflowRun.data.conclusion;
          const emoji = status === 'success' ? '✅' : '❌';
          const message = `${emoji} Workflow ${context.workflow} ${status} for ${context.ref}`;

          core.summary
            .addHeading('Deployment Status')
            .addRaw(message)
            .write();
