name: Chicha Store - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: 18.x
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint Backend
      working-directory: ./backend
      run: npm run lint

    - name: Lint Frontend
      working-directory: ./frontend
      run: npm run lint

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test
      env:
        TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test

    - name: Check Test Coverage
      run: |
        cd backend
        npm run test:coverage
        cd ../frontend
        npm run test:coverage

    - name: Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test

  build-and-deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build Backend
      working-directory: ./backend
      run: npm run build

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Docker Build and Push
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker build -t chichastore/backend:${{ github.sha }} ./backend
        docker build -t chichastore/frontend:${{ github.sha }} ./frontend
        docker push chichastore/backend:${{ github.sha }}
        docker push chichastore/frontend:${{ github.sha }}

    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      run: |
        ssh ${{ secrets.PRODUCTION_SERVER }} "
          docker pull chichastore/backend:${{ github.sha }}
          docker pull chichastore/frontend:${{ github.sha }}
          docker-compose -f docker-compose.production.yml up -d
        "

    - name: Notify Deployment
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: Deployment result for Chicha Store
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
