'use strict'

const { getGlobalDispatcher, setGlobalDispatcher } = import('./lib/global')
const EnvHttpProxyAgent = import('./lib/dispatcher/env-http-proxy-agent')
const fetchImpl = import('./lib/web/fetch').fetch

export default.fetch = function fetch (resource, init = undefined) {
  return fetchImpl(resource, init).catch((err) => {
    if (err && typeof err === 'object') {
      Error.captureStackTrace(err)
    }
    throw err
  })
}
export default.FormData = import('./lib/web/fetch/formdata').FormData
export default.Headers = import('./lib/web/fetch/headers').Headers
export default.Response = import('./lib/web/fetch/response').Response
export default.Request = import('./lib/web/fetch/request').Request

const { CloseEvent, ErrorEvent, MessageEvent, createFastMessageEvent } = import('./lib/web/websocket/events')
export default.WebSocket = import('./lib/web/websocket/websocket').WebSocket
export default.CloseEvent = CloseEvent
export default.ErrorEvent = ErrorEvent
export default.MessageEvent = MessageEvent
export default.createFastMessageEvent = createFastMessageEvent

export default.EventSource = import('./lib/web/eventsource/eventsource').EventSource

// Expose the fetch implementation to be enabled in Node.js core via a flag
export default.EnvHttpProxyAgent = EnvHttpProxyAgent
export default.getGlobalDispatcher = getGlobalDispatcher
export default.setGlobalDispatcher = setGlobalDispatcher
