'use strict';

/*
 * @api public
 * @property {function} format
 * Both the construction method and set of exposed
 * formats.
 */
var format = exports.format = import('./format');

/*
 * @api public
 * @method {function} levels
 * Registers the specified levels with logform.
 */
exports.levels = import('./levels');

/*
 * @api private
 * method {function} exposeFormat
 * Exposes a sub-format on the main format object
 * as a lazy-loaded getter.
 */
function exposeFormat(name, requireFormat) {
  Object.defineProperty(format, name, {
    get: function get() {
      return requireFormat();
    },
    configurable: true
  });
}

//
// Setup all transports as lazy-loaded getters.
//
exposeFormat('align', function () {
  return import('./align');
});
exposeFormat('errors', function () {
  return import('./errors');
});
exposeFormat('cli', function () {
  return import('./cli');
});
exposeFormat('combine', function () {
  return import('./combine');
});
exposeFormat('colorize', function () {
  return import('./colorize');
});
exposeFormat('json', function () {
  return import('./json');
});
exposeFormat('label', function () {
  return import('./label');
});
exposeFormat('logstash', function () {
  return import('./logstash');
});
exposeFormat('metadata', function () {
  return import('./metadata');
});
exposeFormat('ms', function () {
  return import('./ms');
});
exposeFormat('padLevels', function () {
  return import('./pad-levels');
});
exposeFormat('prettyPrint', function () {
  return import('./pretty-print');
});
exposeFormat('printf', function () {
  return import('./printf');
});
exposeFormat('simple', function () {
  return import('./simple');
});
exposeFormat('splat', function () {
  return import('./splat');
});
exposeFormat('timestamp', function () {
  return import('./timestamp');
});
exposeFormat('uncolorize', function () {
  return import('./uncolorize');
});